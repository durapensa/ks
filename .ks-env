#!/usr/bin/env bash
# Knowledge System Environment Configuration
# Source this file in all tools: source "$(dirname "$0")/../../.ks-env"
# Then source needed libraries: ks_source_lib core

# Base directories
export KS_ROOT="${KS_ROOT:-$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)}"
export KS_KNOWLEDGE_DIR="${KS_KNOWLEDGE_DIR:-$KS_ROOT/knowledge}"
export KS_TOOLS_DIR="$KS_ROOT/tools"
export KS_EVENTS_DIR="$KS_KNOWLEDGE_DIR/events"
export KS_DERIVED_DIR="$KS_KNOWLEDGE_DIR/derived"

# File paths
export KS_HOT_LOG="$KS_EVENTS_DIR/hot.jsonl"
export KS_ARCHIVE_DIR="$KS_EVENTS_DIR/archive"
export KS_BACKGROUND_DIR="$KS_KNOWLEDGE_DIR/.background"
export KS_PROCESS_REGISTRY="$KS_BACKGROUND_DIR/processes"
export KS_ANALYSIS_QUEUE="$KS_BACKGROUND_DIR/analysis_queue.json"

# Claude model for analysis tools
export KS_MODEL="${KS_MODEL:-sonnet}"

# Library sourcing helper
ks_source_lib() {
    local lib_name="$1"
    local lib_file="$KS_ROOT/lib/$lib_name.sh"
    
    # Check tools/lib first if script is in tools/
    # Use $0 as fallback for script location
    local script_path="${BASH_SOURCE[${#BASH_SOURCE[@]}-1]:-$0}"
    local script_dir="$(cd "$(dirname "$script_path")" && pwd)"
    if [[ "$script_dir" =~ "$KS_ROOT/tools" ]] && [[ -f "$KS_ROOT/tools/lib/$lib_name.sh" ]]; then
        lib_file="$KS_ROOT/tools/lib/$lib_name.sh"
    fi
    
    if [[ -f "$lib_file" ]]; then
        source "$lib_file"
    else
        echo "Warning: Library '$lib_name' not found" >&2
        return 1
    fi
}