#!/usr/bin/env bash

# kq (knowledge-query) - Search across events and knowledge
# Usage: kq <search_term> [--type <type>] [--topic <topic>] [--since <date>]

set -euo pipefail

# Source configuration and modular libraries
source "${0%/*}/../../.ks-env"
source "$KS_ROOT/lib/core.sh"      # For ks_timestamp (used by queue)
source "$KS_ROOT/lib/files.sh"     # For ks_collect_files
source "$KS_ROOT/tools/lib/queue.sh"     # For ks_check_background_results

# Check for background analysis results
ks_check_background_results || true

# All paths come from .ks-env

# Parse arguments
SEARCH_TERM=""
TYPE_FILTER=""
TOPIC_FILTER=""
SINCE_FILTER=""

while [[ $# -gt 0 ]]; do
    case $1 in
        --type)
            TYPE_FILTER="$2"
            shift 2
            ;;
        --topic)
            TOPIC_FILTER="$2"
            shift 2
            ;;
        --since)
            SINCE_FILTER="$2"
            shift 2
            ;;
        *)
            if [[ -z "$SEARCH_TERM" ]]; then
                SEARCH_TERM="$1"
            else
                echo "Unknown option: $1" >&2
                exit 1
            fi
            shift
            ;;
    esac
done

if [[ -z "$SEARCH_TERM" ]]; then
    echo "Usage: kq <search_term> [--type <type>] [--topic <topic>] [--since <date>]" >&2
    exit 1
fi

# Build jq filter
JQ_FILTER="."

if [[ -n "$TYPE_FILTER" ]]; then
    JQ_FILTER="$JQ_FILTER | select(.type == \"$TYPE_FILTER\")"
fi

if [[ -n "$TOPIC_FILTER" ]]; then
    JQ_FILTER="$JQ_FILTER | select(.topic == \"$TOPIC_FILTER\")"
fi

if [[ -n "$SINCE_FILTER" ]]; then
    JQ_FILTER="$JQ_FILTER | select(.ts >= \"$SINCE_FILTER\")"
fi

# Use shared file collection function for consistent processing
ks_collect_files

# Filter files by date if --since was provided
if [[ -n "$SINCE_FILTER" ]]; then
    # For date filtering, we need to check each file's content
    FILTERED_FILES=()
    for file in "${FILES_TO_PROCESS[@]}"; do
        # Check if file contains any events after the since date
        if jq -e --arg since "$SINCE_FILTER" 'select(.ts >= $since) | true' "$file" >/dev/null 2>&1; then
            FILTERED_FILES+=("$file")
        fi
    done
    FILES_TO_PROCESS=("${FILTERED_FILES[@]}")
fi

# Perform search with single jq call if files exist
if [[ ${#FILES_TO_PROCESS[@]} -gt 0 ]]; then
    jq -r --arg search_term "$SEARCH_TERM" "$JQ_FILTER | select(.content | test(\$search_term; \"i\")) | \"\(.ts) [\(.type)/\(.topic)] \(.content)\"" "${FILES_TO_PROCESS[@]}" 2>/dev/null || true
fi