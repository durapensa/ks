#!/usr/bin/env bash

# knowledge-consolidation - Measure concept definition stability and evolution

set -euo pipefail

# Source libraries
source "$(dirname "${BASH_SOURCE[0]}")/../.ks-env" || exit 1
source "$KS_ROOT/lib/core.sh"
source "$KS_ROOT/lib/error.sh"
source "$KS_ROOT/lib/usage.sh"
source "$KS_ROOT/lib/argparse.sh"

# Parse arguments for ANALYZE category
ks_parse_category_args "ANALYZE" -- "$@"

usage() {
    ks_generate_usage "Measure concept definition stability and consolidation patterns" \
        "knowledge-consolidation EXPERIMENT_NAME" \
        "Analyzes how concept definitions stabilize and evolve during dialogue." \
        "" \
        "EXPERIMENT_NAME    Name of experiment directory in \$KS_EXPERIMENTS_DIR" \
        "" \
        "  --min-mentions NUM   Minimum mentions for analysis (default: 2)" \
        "  --format FORMAT      Output format: table, json, csv (default: table)" \
        "  --limit NUM          Maximum concepts to return (default: 20)" \
        "" \
        "Examples:" \
        "  knowledge-consolidation consolidation-test" \
        "  knowledge-consolidation concept-formation-test --format csv --min-mentions 3"
}

# Parse remaining arguments
if [[ ${#REMAINING_ARGS[@]} -lt 1 ]]; then
    ks_exit_usage "Missing required argument: EXPERIMENT_NAME"
fi

EXPERIMENT_NAME="${REMAINING_ARGS[0]}"
MIN_MENTIONS="${ANALYZE_MIN_MENTIONS:-2}"
OUTPUT_FORMAT="${ANALYZE_FORMAT:-table}"
RESULT_LIMIT="${ANALYZE_LIMIT:-20}"

# Validate experiment directory
EXPERIMENT_DIR="$KS_EXPERIMENTS_DIR/$EXPERIMENT_NAME"
if [[ ! -d "$EXPERIMENT_DIR" ]]; then
    ks_exit_error "Experiment directory not found: $EXPERIMENT_DIR"
fi

KG_DB="$EXPERIMENT_DIR/$KS_CONVERSATION_KNOWLEDGE_DIR/concepts.db"
if [[ ! -f "$KG_DB" ]]; then
    ks_exit_error "Knowledge graph database not found. Run 'ks kg run-distillation' first."
fi

# Execute consolidation analysis query
QUERY="
SELECT 
    c.concept_name,
    COUNT(*) as total_mentions,
    COUNT(DISTINCT c.description) as definition_variations,
    ROUND(MIN(c.weight), 3) as initial_weight,
    ROUND(MAX(c.weight), 3) as final_weight,
    ROUND(MAX(c.weight) - MIN(c.weight), 3) as weight_evolution,
    MIN(CAST(json_extract(e.event_data, '$.round_number') AS INTEGER)) as first_round,
    MAX(CAST(json_extract(e.event_data, '$.round_number') AS INTEGER)) as last_round,
    CASE 
        WHEN MAX(CAST(json_extract(e.event_data, '$.round_number') AS INTEGER)) - 
             MIN(CAST(json_extract(e.event_data, '$.round_number') AS INTEGER)) >= 10 
        THEN 'persistent' 
        ELSE 'ephemeral' 
    END as concept_durability,
    CASE
        WHEN COUNT(DISTINCT c.description) = 1 THEN 'stable'
        WHEN COUNT(DISTINCT c.description) <= 3 THEN 'evolving'
        ELSE 'unstable'
    END as definition_stability
FROM concepts c
JOIN events e ON c.source_event_id = e.id
WHERE json_extract(e.event_data, '$.round_number') IS NOT NULL
GROUP BY c.concept_name
HAVING total_mentions >= $MIN_MENTIONS
ORDER BY weight_evolution DESC, total_mentions DESC
LIMIT $RESULT_LIMIT;
"

case "$OUTPUT_FORMAT" in
    "json")
        sqlite3 -json "$KG_DB" "$QUERY"
        ;;
    "csv")
        sqlite3 -csv -header "$KG_DB" "$QUERY"
        ;;
    "table"|*)
        echo "Knowledge Consolidation Analysis: $EXPERIMENT_NAME"
        echo "Minimum mentions threshold: $MIN_MENTIONS"
        echo ""
        sqlite3 -header -column "$KG_DB" "$QUERY"
        ;;
esac

if [[ "$ANALYZE_VERBOSE" == "true" ]]; then
    echo ""
    echo "Analysis Insights:"
    echo "• weight_evolution shows how concept importance changed during dialogue"
    echo "• definition_variations indicates conceptual refinement (1=stable, >3=unstable)"
    echo "• concept_durability based on round span (persistent ≥10 rounds apart)"
    echo "• Positive weight_evolution suggests concepts that gained importance"
    
    # Additional analysis: consolidation patterns
    PATTERN_QUERY="
    SELECT 
        concept_durability,
        definition_stability,
        COUNT(*) as concept_count,
        ROUND(AVG(weight_evolution), 3) as avg_weight_evolution
    FROM (
        SELECT 
            c.concept_name,
            MAX(c.weight) - MIN(c.weight) as weight_evolution,
            CASE 
                WHEN MAX(CAST(json_extract(e.event_data, '$.round_number') AS INTEGER)) - 
                     MIN(CAST(json_extract(e.event_data, '$.round_number') AS INTEGER)) >= 10 
                THEN 'persistent' 
                ELSE 'ephemeral' 
            END as concept_durability,
            CASE
                WHEN COUNT(DISTINCT c.description) = 1 THEN 'stable'
                WHEN COUNT(DISTINCT c.description) <= 3 THEN 'evolving'
                ELSE 'unstable'
            END as definition_stability
        FROM concepts c
        JOIN events e ON c.source_event_id = e.id
        WHERE json_extract(e.event_data, '$.round_number') IS NOT NULL
        GROUP BY c.concept_name
        HAVING COUNT(*) >= $MIN_MENTIONS
    )
    GROUP BY concept_durability, definition_stability
    ORDER BY concept_count DESC;
    "
    
    echo ""
    echo "Consolidation Pattern Summary:"
    sqlite3 -header -column "$KG_DB" "$PATTERN_QUERY"
fi