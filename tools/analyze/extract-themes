#!/usr/bin/env bash

# extract-themes - Extract key themes from knowledge events
# Usage: extract-themes [--days N] [--type TYPE]

set -euo pipefail

# Source configuration and modular libraries
source "$(dirname "$0")/../../.ks-env"
ks_source_lib core      # For ks_validate_days, ks_timestamp (used by queue)
ks_source_lib files     # For ks_collect_files
ks_source_lib queue     # For ks_check_background_results
ks_source_lib claude    # For ks_claude_analyze, ks_format_analysis

# Check for background analysis results
ks_check_background_results || true

# Default values
DAYS="${1:-7}"
TYPE_FILTER=""
FORMAT="text"

# Parse arguments
while [[ $# -gt 0 ]]; do
    case $1 in
        --days)
            DAYS="$2"
            shift 2
            ;;
        --type)
            TYPE_FILTER="$2"
            shift 2
            ;;
        --format)
            FORMAT="$2"
            shift 2
            ;;
        --help|-h)
            echo "Usage: extract-themes [options]"
            echo ""
            echo "Options:"
            echo "  --days N        Analyze events from last N days (default: 7)"
            echo "  --type TYPE     Filter by event type"
            echo "  --format FORMAT Output format: text, json, markdown (default: text)"
            echo ""
            echo "Extract key themes from knowledge events using AI analysis"
            exit 0
            ;;
        *)
            echo "Unknown option: $1" >&2
            echo "Use --help for usage information" >&2
            exit 1
            ;;
    esac
done

# Build filter
FILTER="."
if [ -n "$TYPE_FILTER" ]; then
    FILTER="$FILTER | select(.type == \"$TYPE_FILTER\")"
fi

# Validate --days parameter
ks_validate_days "$DAYS" || exit 1

# Calculate date range
SINCE_DATE=$(date -u -d "${DAYS} days ago" +%Y-%m-%dT%H:%M:%SZ)

# Collect events from hot log and archives using shared function
CONTENT=""

# Use shared file collection function
ks_collect_files

# Process all files in single jq call if any files exist
if [ ${#FILES_TO_PROCESS[@]} -gt 0 ]; then
    CONTENT=$(cat "${FILES_TO_PROCESS[@]}" | jq -r --arg since_date "$SINCE_DATE" "$FILTER | select(.ts >= \$since_date) | .content" 2>/dev/null | grep -v '^$' || true)
fi

if [ -z "$CONTENT" ]; then
    echo "No events found in the last $DAYS days"
    exit 0
fi

# Get analysis from Claude using modular function
ANALYSIS=$(echo "$CONTENT" | ks_claude_analyze "$KS_PROMPT_THEMES")

# Format output using modular formatter
ks_format_analysis "$FORMAT" "$ANALYSIS" "Knowledge Themes" \
    '.themes[] | "## \(.name)\n\n\(.description)\n\n**Frequency:** \(.frequency)/10\n\n### Supporting Evidence:\n\(.supporting_quotes | map("- \"\(.)\"") | join("\n"))\n"' \
    '.themes[] | "THEME: \(.name)\n\(.description)\nFrequency: \(.frequency)/10\nEvidence:\n\(.supporting_quotes | map("  - \"\(.)\"") | join("\n"))\n"'