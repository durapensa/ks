#!/usr/bin/env bash

# extract-themes - Extract key themes from knowledge events

set -euo pipefail

# Source configuration and modular libraries
source "${0%/*}/../../.ks-env"
source "$KS_ROOT/lib/core.sh"
source "$KS_ROOT/lib/files.sh"
source "$KS_ROOT/lib/time.sh"
source "$KS_ROOT/lib/argparse.sh"
source "$KS_ROOT/tools/lib/queue.sh"
source "$KS_ROOT/tools/lib/claude.sh"

# Usage function
usage() {
    echo "Usage: extract-themes [options]"
    echo ""
    echo "Options:"
    echo "  --days N        Analyze events from last N days (default: 7)"
    echo "  --since DATE    Analyze events since ISO date (overrides --days)"
    echo "  --type TYPE     Filter by event type"
    echo "  --format FORMAT Output format: text, json, markdown (default: text)"
    echo "  -h, --help      Show this help message"
    echo ""
    echo "Extract key themes from knowledge events using AI analysis"
}

# Check for background analysis results
ks_check_background_results || true

# Default values
DAYS="7"
SINCE=""
TYPE_FILTER=""
FORMAT="text"

# Parse arguments using GNU getopt
PARSED=$(ks_parse_options "extract-themes" "d:s:t:f:" "days:,since:,type:,format:" "$@") || {
    usage >&2
    exit 1
}

eval set -- "$PARSED"

# Process options
while true; do
    case "$1" in
        -h|--help)
            usage
            exit 0
            ;;
        -d|--days)
            ks_handle_days "$2"
            shift 2
            ;;
        -s|--since)
            ks_handle_since "$2"
            shift 2
            ;;
        -t|--type)
            TYPE_FILTER="$2"
            shift 2
            ;;
        -f|--format)
            ks_handle_format "$2"
            shift 2
            ;;
        --)
            shift
            break
            ;;
        *)
            ks_unknown_option "$1"
            ;;
    esac
done

# Extract events and analyze
CONTENT=$(ks_extract_events "$DAYS" "$SINCE" "$(ks_build_filter "$TYPE_FILTER" "")")

[[ -z "$CONTENT" ]] && { echo "No events found in the last $DAYS days"; exit 0; }

# Prepare AI prompt
PROMPT="Analyze the following knowledge events from the last $DAYS days and extract the most important themes.

$CONTENT

Identify 3-5 key themes from the events. Return ONLY valid JSON in this format:
{
  \"themes\": [
    {
      \"name\": \"Theme Name\",
      \"description\": \"Brief description\",
      \"frequency\": 5,
      \"supporting_quotes\": [\"quote1\", \"quote2\"]
    }
  ]
}

If no meaningful themes can be extracted, return: {\"themes\": []}"

# Analyze with Claude
ANALYSIS=$(ks_claude_analyze "$PROMPT" || echo "Error: Analysis failed")

# Output based on format
ks_format_analysis "$ANALYSIS" "$FORMAT" "Theme Analysis"