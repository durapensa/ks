#!/usr/bin/env bash

# extract-themes - Extract key themes from knowledge events (category-based version)

set -euo pipefail

# Source configuration and modular libraries
source "${0%/*}/../../.ks-env"
source "$KS_ROOT/lib/core.sh"
source "$KS_ROOT/lib/files.sh"
source "$KS_ROOT/lib/time.sh"
source "$KS_ROOT/lib/validation.sh"
source "$KS_ROOT/lib/error.sh"
source "$KS_ROOT/lib/usage.sh"
source "$KS_ROOT/lib/argparse.sh"
source "$KS_ROOT/tools/lib/queue.sh"
source "$KS_ROOT/tools/lib/claude.sh"
source "$KS_ROOT/tools/lib/analysis.sh"

# Check for background analysis results
ks_check_background_results || true

# Standardized usage function
usage() {
    declare -a arguments=()
    declare -a examples=(
        "extract-themes --days 7"
        "extract-themes --since 2024-03-01 --format json"
    )
    ks_generate_usage \
        "Extract key themes from knowledge events using AI analysis" \
        "extract-themes" \
        "[options]" \
        "ANALYZE" \
        arguments \
        examples
}

# Parse arguments using the new library
ks_parse_category_args "ANALYZE" -- "$@"

# Validate options
ks_validate_analyze_options "$DAYS" "$SINCE" "$TYPE" "$FORMAT" "$VERBOSE"

# Extract events and analyze (unchanged business logic)
CONTENT=$(ks_extract_events "$DAYS" "$SINCE" "$(ks_build_filter "$TYPE" "")")

[[ -z "$CONTENT" ]] && { echo "No events found in the last $DAYS days"; exit $EXIT_SUCCESS; }

# Prepare AI prompt
PROMPT="Analyze the following knowledge events from the last $DAYS days and extract the most important themes.

$CONTENT

Identify 3-5 key themes from the events. Return ONLY valid JSON in this format:
{
  \"themes\": [
    {
      \"name\": \"Theme Name\",
      \"description\": \"Brief description\",
      \"frequency\": 5,
      \"supporting_quotes\": [\"quote1\", \"quote2\"]
    }
  ]
}

If no meaningful themes can be extracted, return: {\"themes\": []}"

# Analyze with Claude
ANALYSIS=$(ks_claude_analyze "$PROMPT" || ks_exit_error "Claude analysis failed")

# Output based on format
ks_format_analysis "$ANALYSIS" "$FORMAT" "Theme Analysis"