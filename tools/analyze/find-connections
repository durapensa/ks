#!/usr/bin/env bash

# find-connections - Find conceptual connections between knowledge events
# Usage: find-connections [options]

set -euo pipefail

# Source configuration
source "$(dirname "$0")/../../.ks-env"
source "$KS_ROOT/.ks-lib"

# Check for background analysis results
ks_check_background_results || true

# Default values
TOPIC_FILTER=""
FORMAT="text"
DAYS=30

# Parse arguments
while [[ $# -gt 0 ]]; do
    case $1 in
        --topic)
            TOPIC_FILTER="$2"
            shift 2
            ;;
        --format)
            FORMAT="$2"
            shift 2
            ;;
        --days)
            DAYS="$2"
            shift 2
            ;;
        --help|-h)
            echo "Usage: find-connections [options]"
            echo ""
            echo "Options:"
            echo "  --topic TOPIC    Filter by specific topic"
            echo "  --days N         Analyze events from last N days (default: 30)"
            echo "  --format FORMAT  Output format: text, json, markdown (default: text)"
            echo ""
            echo "Find conceptual connections between knowledge events using AI analysis"
            exit 0
            ;;
        *)
            echo "Unknown option: $1" >&2
            echo "Use --help for usage information" >&2
            exit 1
            ;;
    esac
done

# Validate --days parameter
ks_validate_days "$DAYS" || exit 1

# Calculate date range
SINCE_DATE=$(date -u -d "${DAYS} days ago" +%Y-%m-%dT%H:%M:%SZ)

# Build filter
FILTER="."
if [ -n "$TOPIC_FILTER" ]; then
    FILTER="$FILTER | select(.topic == \"$TOPIC_FILTER\")"
fi

# Collect events from hot log and archives using shared function
EVENTS=""

# Use shared file collection function
ks_collect_files

# Process all files in single jq call if any files exist
if [ ${#FILES_TO_PROCESS[@]} -gt 0 ]; then
    EVENTS=$(cat "${FILES_TO_PROCESS[@]}" | jq -r --arg since_date "$SINCE_DATE" "$FILTER | select(.ts >= \$since_date) | \"\(.topic): \(.content)\"" 2>/dev/null | grep -v '^$' || true)
fi

if [ -z "$EVENTS" ]; then
    echo "No events found${TOPIC_FILTER:+ for topic '$TOPIC_FILTER'} in the last $DAYS days"
    exit 0
fi

# Get analysis from Claude using modular function
ANALYSIS=$(echo "$EVENTS" | ks_claude_analyze "$KS_PROMPT_CONNECTIONS")

# Format output using modular formatter
ks_format_analysis "$FORMAT" "$ANALYSIS" "Knowledge Connections" \
    '.connections[] | "## \(.concepts | join(" â†” "))\n\n**Relationship:** \(.relationship)\n\n**Strength:** \(.strength)/10\n\n**Evidence:** \(.evidence)\n"' \
    '.connections[] | "CONCEPTS: \(.concepts | join(" <-> "))\nRELATIONSHIP: \(.relationship)\nSTRENGTH: \(.strength)/10\nEVIDENCE: \(.evidence)\n"'