#!/usr/bin/env bash

# find-connections - Find connections between knowledge events (declarative version)

set -euo pipefail

# Source configuration and modular libraries
source "${0%/*}/../../.ks-env"
source "$KS_ROOT/lib/core.sh"
source "$KS_ROOT/lib/files.sh"
source "$KS_ROOT/lib/time.sh"
source "$KS_ROOT/lib/argparse.sh"
source "$KS_ROOT/tools/lib/queue.sh"
source "$KS_ROOT/tools/lib/claude.sh"

# Define command description
ks_define_usage "Find non-obvious connections between knowledge events using AI analysis"

# Check for background analysis results
ks_check_background_results || true

# Initialize and define options
ks_init_options
ks_example "--days 7"
ks_example "--topic \"learning\" --format json"
ks_option "days" "d" "Analyze events from last N days" "7" "ks_handle_days"
ks_option "since" "s" "Analyze events since ISO date (overrides --days)" "" "ks_handle_since"
ks_option "type" "t" "Filter by event type" "" ""
ks_option "topic" "p" "Filter by topic metadata" "" ""
ks_option "format" "f" "Output format: text, json, markdown" "text" "ks_handle_format"

# Process options - this sets DAYS, SINCE, TYPE, TOPIC, FORMAT variables
ks_process_options "$@"

# Extract events and analyze
CONTENT=$(ks_extract_events "$DAYS" "$SINCE" "$(ks_build_filter "$TYPE" "$TOPIC")")

[[ -z "$CONTENT" ]] && { echo "No events found in the last $DAYS days"; exit 0; }

# Prepare AI prompt
PROMPT="Analyze the following knowledge events from the last $DAYS days and find non-obvious connections.

$CONTENT

Look for interesting patterns, relationships, or connections between different thoughts and observations. Return ONLY valid JSON in this format:
{
  \"connections\": [
    {
      \"events\": [\"timestamp1: event1\", \"timestamp2: event2\"],
      \"relationship\": \"description of connection\",
      \"insight\": \"what this connection reveals\",
      \"confidence\": 0.8
    }
  ]
}

If no meaningful connections are found, return: {\"connections\": []}"

# Analyze with Claude
ANALYSIS=$(ks_claude_analyze "$PROMPT" || echo "Error: Analysis failed")

# Output based on format
ks_format_analysis "$ANALYSIS" "$FORMAT" "Connection Analysis"